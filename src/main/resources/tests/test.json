{
  "questions" : [ {
    "questionId" : "1",
    "category" : "JAVA SE",
    "questionText" : "Comparable.compareTo() method will produce the following result:",
    "answers" : [ {
      "answerId" : "A",
      "answerText" : "true, false"
    }, {
      "answerId" : "B",
      "answerText" : "0, 1"
    }, {
      "answerId" : "C",
      "answerText" : "1, 0, -1"
    }, {
      "answerId" : "D",
      "answerText" : "negative integer, zero or a positive integer"
    } ],
    "correctAnswers" : [ "D" ]
  }, {
    "questionId" : "2",
    "category" : "JAVA SE",
    "questionText" : "A java collection data structure to keep items sorted:",
    "answers" : [ {
      "answerId" : "A",
      "answerText" : "LinkedHashSet"
    }, {
      "answerId" : "B",
      "answerText" : "HashSet"
    }, {
      "answerId" : "C",
      "answerText" : "TreeMap"
    }, {
      "answerId" : "D",
      "answerText" : "TreeSet"
    } ],
    "correctAnswers" : [ "C", "D" ]
  }, {
    "questionId" : "3",
    "category" : "JAVA SE",
    "questionText" : "Can a class inherit from two super classes at the same time in Java?",
    "answers" : [ {
      "answerId" : "A",
      "answerText" : "Yes, always"
    }, {
      "answerId" : "B",
      "answerText" : "Yes, but you have to override superclass's methods"
    }, {
      "answerId" : "C",
      "answerText" : "No multiple inheritance in Java. It's not allowed by the language"
    } ],
    "correctAnswers" : [ "C" ]
  }, {
    "questionId" : "4",
    "category" : "JAVA SE",
    "questionText" : "Best way to change value of existing string:",
    "answers" : [ {
      "answerId" : "A",
      "answerText" : "use the StringBuilder class"
    }, {
      "answerId" : "B",
      "answerText" : "convert the string into a char array, make modifications, and then convert the char array back to a string"
    }, {
      "answerId" : "C",
      "answerText" : "strings are immutable, so you can't change its value"
    } ],
    "correctAnswers" : [ "C" ]
  }, {
    "questionId" : "5",
    "category" : "JAVA SE",
    "questionText" : "Class Object DO NOT contains the method:",
    "answers" : [ {
      "answerId" : "A",
      "answerText" : "equals()"
    }, {
      "answerId" : "B",
      "answerText" : "toHashCode()"
    }, {
      "answerId" : "C",
      "answerText" : "toString()"
    }, {
      "answerId" : "D",
      "answerText" : "wait()"
    } ],
    "correctAnswers" : [ "A", "B" ]
  } ]
}